#include "stdafx.h"
#include<iostream>
#include<string.h>
#include<cstdio>
using namespace std;

int GetBit(char c, int i) //取c得第i位
{
	return (c >> i) & 1;
}

void SetBit(char &c, int i, int v)
{
	if (v)
		c |= (1 << i);
	else
		c &= ~(1 << i);
}

void Flip(char &c, int i) //c得第i位取反
{
	c ^= (1 << i);
}

void OutputResult(int t, char result[])
{
	cout << "PULLZE #" << t << endl;
	for (int i = 0; i < 5; i++)
	{
		for (int j = 0; j < 6; j++)
			cout << GetBit(result[i], j) << ' ';
		cout << endl;
	}
}
int main()
{
	char OriLight[5];
	char Light[5];
	char result[5];
	char switchs;

	//先要输入原始状态
	int T;
	cin >> T;
	for (int t = 1; t <= T; t++)
	{
		memset(OriLight, 0, sizeof(OriLight));
		for (int i = 0; i < 5; i++)
			for (int j = 0; j < 6; j++)
			{
				int s;
				cin >> s;
				SetBit(OriLight[i], j, s);
			}
		for (int n = 0; n < 64; n++)
		{
			memcpy(Light, OriLight, sizeof(OriLight));
			switchs = n; //第i行的开关状态，第一行的状态即为n
			for (int i = 0; i < 5; i++)
			{
				result[i] = switchs;
				for (int j = 0; j < 6; j++)
				{
					if (GetBit(switchs, j))
					{
						if (j > 0)
							Flip(Light[i], j - 1);//改左灯
						Flip(Light[i], j); //中间的灯
						if (j < 5)
							Flip(Light[i], j + 1);//改右灯
					}
				}
				if (i < 4)
					Light[i + 1] ^= switchs; //异或改变下一行灯的状态
				switchs = Light[i]; //i+1行的开关要与第i行灯状态一致，保证第i行的灯全灭
			}
			if (Light[4] == 0)
			{
				OutputResult(t, result);
				break;
			}
		}
	}
	return 0;
}
