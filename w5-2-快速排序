#include "stdafx.h"
#include<iostream>
#include<string.h>
#include<cstdio>
#include<algorithm>
using namespace std;

void Merge(int a[], int s, int m, int e, int tmp[])  //将a[s,m]和a[m+1,e]归并到tmp，将tmp有序排列后，再赋值给a
{
	int p1 = s, p2 = m + 1;
	int pb = 0;
	while ((p1 <= m )&& (p2 <= e))  //两组都没到最右
	{
		if (a[p1] < a[p2])
			tmp[pb++] = a[p1++];
		else
			tmp[pb++] = a[p2++];
	}
	while (p1 <= m)
		tmp[pb++] = a[p1++];
	while (p2 <= e)
		tmp[pb++] = a[p2++];
	for (int i = 0; i < e-s+1; i++)
		a[s+i] = tmp[i];
}

void MergeSort(int a[], int s, int e, int tmp[])
{
	if (s < e)
	{
		int m = s + (e - s) / 2;
		MergeSort(a, s, m, tmp);
		MergeSort(a, m + 1, e, tmp);
		Merge(a, s, m, e, tmp);
	}
}

void swap(int &a, int &b)
{
	int tmp = a;
	a = b;
	b = tmp;
}

void QuickSort(int a[], int s, int e)
{
	if (s >= e)
		return;
	int k = a[s];
	int i = s, j = e;
	while (i != j)
	{
		while (j > i&&a[j] >= k)
			j--;
		swap(a[i], a[j]);
		while (j > i&&a[i] <= k)
			i++;
		swap(a[i], a[j]);
	} //a[i]=k了
	QuickSort(a, s, i - 1);
	QuickSort(a, i + 1, e);
}

int main()
{
	int a[10] = { 13,22,34,21,12,5,99,54,3,41 };
	int b[10];
	int size = sizeof(a) / sizeof(int);
	QuickSort(a, 0, size - 1);
	//MergeSort(a, 0, size - 1, b);
	for (int i = 0; i < size; i++)
		cout << a[i] << ",";
	cout << endl;
	return 0;
}
